window.addEventListener("load",async function(){const e="0xC50068E3250469B97693809f936d1e6FC4695141";let t=.037,n=null,a=null,i=null,u=null,s=[{inputs:[{internalType:"contract MNTNToken",name:"_token",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Deposited",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Recovered",type:"event"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"deposit",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"deposits",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDepositAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRewardTokenCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWithdrawAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"tokenAddress",type:"address"},{internalType:"uint256",name:"tokenAmount",type:"uint256"}],name:"recoverBEP20",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"releaseFunds",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"rewardTokenCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_count",type:"uint256"}],name:"setRewardTokenCount",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address payable",name:"_address",type:"address"}],name:"setWithdrawAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"token",outputs:[{internalType:"contract MNTNToken",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalDepositedBNBBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"withdrwAddress",outputs:[{internalType:"address payable",name:"",type:"address"}],stateMutability:"view",type:"function"},{stateMutability:"payable",type:"receive"}];const d=async()=>{r(),a=await window.ethereum.request({method:"eth_chainId"}),i=await window.ethereum.request({method:"eth_accounts"}),56==a&&i.length>0?(n=!0,window.web3=new Web3(window.ethereum),(u=new window.web3.eth.Contract(s,"0x772bF480980A8d5c4a9c507962C8A7d6B86A4EFa")).methods.getRewardTokenCount().call().then(function(e){t=e/1e18}),u.methods.balanceOf(i[0]).call().then(function(e){document.getElementById("wallet_balance").innerText=p(e/1e18)}),u.methods.balanceOf(e).call().then(function(e){let t=(2e4-e/1e18)/2e4*100;t>0&&t<4&&(t=4),document.getElementById("contract_balance").innerText=p(2e4-e/1e18),document.querySelector(".percent").style.width=t+"%"}),document.getElementById("btn_connect").innerHTML="Connected",document.getElementById("btn_connect").classList.add("connected"),document.getElementById("inp_bnb").value="",document.getElementById("inp_climb").value=""):n=!1,y()},o=(e,t,n)=>{document.getElementById(t).value=document.getElementById(e).value*n},p=e=>e=e.toLocaleString(0,{minimumFractionDigits:0}),l=e=>{let t=document.querySelector(".alert_list"),n=document.createElement("div");n.innerHTML=e,t.appendChild(n),setTimeout(()=>{n.remove()},2500)},r=()=>{document.querySelector(".loader").classList.add("active")},y=()=>{document.querySelector(".loader").classList.remove("active")};window.ethereum.on("accountsChanged",e=>{d()}),window.ethereum.on("chainChanged",e=>{window.location.reload()}),document.getElementById("btn_connect").addEventListener("click",async()=>{if(56==await window.ethereum.request({method:"eth_chainId"}))return!!(window.ethereum&&window.ethereum.isMetaMask&&window.ethereum.isConnected())&&(window.web3=new Web3(window.ethereum),window.ethereum.enable(),!0);l("Please change network as Binance Smart Chain.")}),document.getElementById("btn_swap").addEventListener("click",async()=>{if(n){let t=1e18*document.getElementById("inp_bnb").value,n=1e18*document.getElementById("inp_climb").value;t>=1e14?u.methods.balanceOf(e).call().then(async function(e){+n<=+e?(u.methods.deposit().send({from:i[0],value:t},function(e){null!=e&&y()}).then(async function(e){d()}),r()):l("Please check token limit")}):l("Please input correct value")}else l("Please connect MetaMask")}),document.getElementById("inp_bnb").addEventListener("keyup",()=>{o("inp_bnb","inp_climb",1/t)}),document.getElementById("inp_climb").addEventListener("keyup",()=>{o("inp_climb","inp_bnb",t)}),d()});